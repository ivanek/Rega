% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflows.R
\name{new_submission}
\alias{new_submission}
\title{Submit New Data to EGA}
\usage{
new_submission(
  request_data,
  client,
  logfile = NULL,
  id = NULL,
  retrieve_if_exists = FALSE,
  ...
)
}
\arguments{
\item{request_data}{List of data frames. Parsed submission metadata
containing correctly formatted and linked information for submission}

\item{client}{List of functions. EGA API client created by \code{create_client}
function from EGA API schema.}

\item{logfile}{Character. Path of log file to log the \code{httr2} responses from
individual operations or \code{NULL}. Defaults to \code{NULL}.}

\item{id}{Integer.}

\item{retrieve_if_exists}{Logical.}

\item{...}{List. Additional arguments to the function.}
}
\value{
List of data frames. Parsed response objects from httr2 requests
}
\description{
This function creates a new submission and associates all specified data with
it. Following data has to be present in the request data object: submission
studies, experiments, samples, runs, analyses, datasets. The files associated
with the submission must be present in the EGA Inbox and they are fetched and
matched according to Inbox path. In case the submission is interrupted or
fails, all the information entered into EGA database is rolled back apart
from the submission itself. If the workflow successfully creates a
submission, but fails in the following steps, the returned submission ID can
be used as a parameter to the workflow to continue entering data into
existing submission. If logfile is specified, the responses from successfully
executed steps (even if the error occurs), will be saved.
}
\examples{
minimal_metadata <- list(
    aliases = list(
        studies = "Study1", experiments = "Experiment1",
        datasets = "Dataset1", samples = "Sample1", runs = "Run1",
        analyses = "Analysis1"
    ),
    files = tibble::tibble(
        file = "raw.fastq.gz", ega_file = list("raw.fastq.gz.c4gh")
    ),
    submission = tibble::tibble(title = "Submission"),
    studies = tibble::tibble(
        study = "Study1", title = "Study Title",
        description = "Study Description",
        study_type = "Whole Genome Sequencing"
    ),
    samples = tibble::tibble(
        alias = "Sample1", phenotype = "wild-type",
        biological_sex = "female", subject_id = "ID1"
    ),
    experiments = tibble::tibble(
        study = "Study1", experiment = "Experiment1",
        design_description = "Experiment Design",
        library_selection = "RANDOM", instrument_model_id = 1L,
        library_layout = "SINGLE", library_strategy = "WGS",
        library_source = "GENOMIC"
    ),
    runs = tibble::tibble(
        run = "Run1", experiment = "Experiment1", run_file_type = "srf",
        alias = "Sample1", files = list("raw.fastq.gz.c4gh")
    ),
    datasets = tibble::tibble(
        dataset = "Dataset1", title = "Dataset Title",
        description = "Dataset Description",
        policy_accession_id = "EGAP00000000001",
        dataset_types = list("Whole genome sequencing"),
        runs = list("Run1")
    )
)

ega <- create_client(extract_api(), verbosity = 0)

# Requires credentials
try(
    new_submission(minimal_metadata, ega)
)

}
