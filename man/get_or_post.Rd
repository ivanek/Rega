% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflow_helpers.R
\name{get_or_post}
\alias{get_or_post}
\title{Retrieve or Submit Data to an EGA API Endpoint}
\usage{
get_or_post(submission_id, data, client, endpoint, retrieve_if_exists = FALSE)
}
\arguments{
\item{submission_id}{An integer representing the submission provisional ID.}

\item{data}{A data frame to be submitted.}

\item{client}{An API client object with \code{get} and \code{post} methods.}

\item{endpoint}{A string specifying the EGA API endpoint. The endpoint will
be a submission type endpoint identified with provisional ID.}

\item{retrieve_if_exists}{A logical flag indicating whether to retrieve data
if it already exists. Defaults to \code{FALSE}.}
}
\value{
A data frame containing the response from the API.
}
\description{
This function retrieves existing data from an API or submits new data if it
does not exist, with optional error handling and retrieval options.
\itemize{
\item If no data is present in the database, it will supplied data will be
inserted.
\item If there is data already present in the database and the number of records
don't match, error will raised.
\item If the number of records match and \code{retrieve_if_exists} is set to TRUE
data will be retrieved from database and nothing will be inserted. If
\code{retrieve_if_exists} is set to FALSE, error will be raised.
}
}
\examples{
# Create mock client for API endpoint
mock_client <- list(
    get__submissions__provisional_id__endpoint = function(id) {
        message("Mock GET request")
        # Simulate an empty response (no existing data)
        return(NULL)
    },
    post__submissions__provisional_id__endpoint = function(id, body) {
        message("Mock POST request")
        message(body) # Simulate returning submitted data
    }
)

# Create mock data to test the function
test_data <- data.frame(id = 1:3, value = c("A", "B", "C"))

# Test the function with mock data and client
result <- get_or_post(
    submission_id = 12345,
    data = test_data,
    client = mock_client,
    endpoint = "endpoint",
    retrieve_if_exists = FALSE
)

}
